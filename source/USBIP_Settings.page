Menu="Utilities"
Title="USBIP Settings"
Icon="unlock-alt"
---
<?php
/* 
 * Copyright 2021 Simon Fairweather
 * Based on Source from Guilherme Jardim & Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

$plugin = "unraid.usbip-gui";
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
$translations = file_exists("$docroot/webGui/include/Translations.php");
require_once "$docroot/plugins/$plugin/include/Legacy.php";
?>
<?if (! $translations):?>
<?eval('?>'.parse_file("$docroot/plugins/$plugin/USBIP_Settings.page"))?>
<?else:?>
<?
require_once "plugins/$plugin/include/lib_usbip.php";

$config_file = "/tmp/$plugin/config/$plugin.cfg";
$cfg = is_file($config_file) ? @parse_ini_file($config_file, true) : array();
$version = parse_ini_file("/etc/unraid-version");



if (count($_POST)) {
	if ($_POST['#apply'] == "_(Apply)_") {
		array_map(function($k, $v) use (&$cfg) { if($k[0] != "#") $cfg["Config"][$k] = $v; }, array_keys($_POST), $_POST );
		save_ini_file($config_file, $cfg);
	}	
}

$usbipd = file_exists("/usr/local/sbin/usbipd");

if ((! file_exists("/usr/sbin/parted") && $cfg['Config']['destructive_mode'] == "enabled")) {
	if (! $usbipd) {
		$cfg['Config']['destructive_mode'] = "disabled";
	}
	save_ini_file($config_file, $cfg);
}
if (version_compare($version['version'],"6.8.9", ">")) {
	$cfg["Config"]["spin_down"] = "yes";
}
?>

<script type="text/javascript" src="<?autov('/webGui/javascript/jquery.filetree.js')?>"></script>
<link type="text/css" rel="stylesheet" href="<?autov('/webGui/styles/jquery.filetree.css')?>" >

<style type="text/css">
	.fileTree {
		border: solid 1px #BBB;
		background: #FFF;
		overflow: scroll;
		padding: 5px;
		position:absolute;
		z-index:100;
		display:none;
		color:initial;
	}
</style>

<script type="text/javascript">


	

	showStatus('pid','usbipd');
</script>

<div id="title" class="nocontrol">_(Common Settings)_</div>
<form markdown="1" name="common_settings" method="POST">


_(Run USBIPD Daemon)_:
: <select name="USBIPD" size="1" <?if (! $usbipd):?>disabled<?endif;?>>
  <?=mk_option($cfg["Config"]["USBIPD"], "disabled", "_(Disabled)_");?>
  <?=mk_option($cfg["Config"]["USBIPD"], "enabled", "_(Enabled)_");?>
  </select><?if (! $usbipd):?>&nbsp;_(The usbipd command missing or usbip_host module not loaded.)_.<?endif;?>

:usbip_settings_destructive_plug:
> If enabled, this will start usbip daemon.
:end



&nbsp;
: <input type="submit" name="#apply" value='_(Apply)_'><input type="button" value='_(Done)_' onclick="done()">
</form>

<div id="title" class="nocontrol">_(Load Kernel Modules)_</div>
<form markdown="1" name="usbip_host" method="POST">
_(Load usbip_host)_?
: <select name="usbip_host" size="1" onchange="prepareSecurity(this);">
  <?=mk_option($cfg['Config']["usbip_host"], "no", "_(No)_");?>
  <?=mk_option($cfg['Config']["usbip_host"], "yes", "_(Yes)_");?>

  </select>

:ud_settings_symlinks_plug:
> Set to **Yes** load usbip_host module.
:end

_(Load vhci_hcd)_?
: <select name="vhci_hcd" size="1" onchange="prepareSecurity(this);">
  <?=mk_option($cfg['Config']["vhci_hcd"], "no", "_(No)_");?>
  <?=mk_option($cfg['Config']["vhci_hcd"], "yes", "_(Yes)_");?>
  </select>

:ud_settings_symlinks_plug:
> Set to **Yes** load vhci_hcd module.
:end




&nbsp;
: <input type="submit" name="#apply" value='_(Apply)_'><input type="button" value='_(Done)_' onclick="done()">
</form>


<?endif;?>
