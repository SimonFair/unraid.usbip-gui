#!/usr/bin/php
<?php
/* Copyright 2015, Guilherme Jardim
 * Copyright 2016-2020, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */

$plugin = "unraid.usbip-gui";
$docroot = $docroot ?: @$_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
require_once("$docroot/plugins/{$plugin}/include/lib_usbip.php");

$COMMAND = $argv[1];

function usbip_modules_load() {
	global $plugin, $config;
	# Get Config file if load module is *YES process.

	$config_file = "/tmp/$plugin/config/$plugin.cfg";
	$cfg = is_file($config_file) ? @parse_ini_file($config_file, true) : array();
	$config = $cfg["Config"];

	
	if ($config["usbip_host"] == "yes") {
		usbip_log("info: Loading kernel module usbip_host");
		exec("modprobe usbip-host") ;
	}
	if ($config["vhci_hcd"] == "yes") {
		usbip_log("info: Loading kernel module vhci_hcd");
		exec("modprobe vhci_hcd") ;
	}

}

function usbipd_start() {
	exec("usbipd -D --pid") ;
	usbip_log("Start usbipd");	
}

function usbipd_stop() {
	exec("killall usbipd") ;
	usbip_log("Shutdown usbipd");	
}

function usbip_reload() {
	if (isset($_ENV['DEVLINKS'])) {
		foreach (explode(" ", $_ENV['DEVLINKS']) as $link) {
			get_udev_info($link, $_ENV, true);
		}
	}
}

function usbip_check_config() {
	usbip_modules_load() ;
	if ($config["USBIPD"]=="enabled") {
		usbipd_start() ;
	} else {
		usbipd_stop() ;
	}		
}



switch ($COMMAND) {
	case 'modules_load':
		usbip_modules_load();
		break;

	case 'start_daemon':
		usbipd_start();
		break;

	case 'stop_daemon':
		usbipd_stop();
		break;

	case 'reload':
		usbip_reload();
		break;

	case 'refresh':
		break;

	case 'check_config':
		usbip_check_config() ;
		break;	

	default:
		usbip_log("Error: 'rc.unraid.usbip-gui {$argv[1]} {$argv[2]}' not understood");
		usbip_log("rc.unraid.usbip-gui usage: 'modules_load','start_daemon','stop_daemon', 'reload', 'refresh', 'check_config");
		exit(0);
		break;
}
?>
